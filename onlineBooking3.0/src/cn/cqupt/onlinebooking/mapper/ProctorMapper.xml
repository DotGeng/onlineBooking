<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.cqupt.onlinebooking.mapper.ProctorMapper" >
  <resultMap id="BaseResultMap" type="cn.cqupt.onlinebooking.po.Proctor" >
    <id column="examID" property="examid" jdbcType="INTEGER" />
    <result column="teacherID" property="teacherid" jdbcType="INTEGER" />
    <result column="examRoomID" property="examroomid" jdbcType="INTEGER" />
    <result column="batch" property="batch" jdbcType="INTEGER" />
    <result column="week" property="week" jdbcType="INTEGER" />
    <result column="periodID" property="periodid" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    examID, teacherID, examRoomID, batch, week, periodID
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.cqupt.onlinebooking.po.ProctorExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from proctor
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from proctor
    where examID = #{examid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from proctor
    where examID = #{examid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.cqupt.onlinebooking.po.ProctorExample" >
    delete from proctor
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.cqupt.onlinebooking.po.Proctor" >
    insert into proctor (examID, teacherID, examRoomID, 
      batch, week, periodID
      )
    values (#{examid,jdbcType=INTEGER}, #{teacherid,jdbcType=INTEGER}, #{examroomid,jdbcType=INTEGER}, 
      #{batch,jdbcType=INTEGER}, #{week,jdbcType=INTEGER}, #{periodid,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.cqupt.onlinebooking.po.Proctor" >
    insert into proctor
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="examid != null" >
        examID,
      </if>
      <if test="teacherid != null" >
        teacherID,
      </if>
      <if test="examroomid != null" >
        examRoomID,
      </if>
      <if test="batch != null" >
        batch,
      </if>
      <if test="week != null" >
        week,
      </if>
      <if test="periodid != null" >
        periodID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="examid != null" >
        #{examid,jdbcType=INTEGER},
      </if>
      <if test="teacherid != null" >
        #{teacherid,jdbcType=INTEGER},
      </if>
      <if test="examroomid != null" >
        #{examroomid,jdbcType=INTEGER},
      </if>
      <if test="batch != null" >
        #{batch,jdbcType=INTEGER},
      </if>
      <if test="week != null" >
        #{week,jdbcType=INTEGER},
      </if>
      <if test="periodid != null" >
        #{periodid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.cqupt.onlinebooking.po.ProctorExample" resultType="java.lang.Integer" >
    select count(*) from proctor
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update proctor
    <set >
      <if test="record.examid != null" >
        examID = #{record.examid,jdbcType=INTEGER},
      </if>
      <if test="record.teacherid != null" >
        teacherID = #{record.teacherid,jdbcType=INTEGER},
      </if>
      <if test="record.examroomid != null" >
        examRoomID = #{record.examroomid,jdbcType=INTEGER},
      </if>
      <if test="record.batch != null" >
        batch = #{record.batch,jdbcType=INTEGER},
      </if>
      <if test="record.week != null" >
        week = #{record.week,jdbcType=INTEGER},
      </if>
      <if test="record.periodid != null" >
        periodID = #{record.periodid,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update proctor
    set examID = #{record.examid,jdbcType=INTEGER},
      teacherID = #{record.teacherid,jdbcType=INTEGER},
      examRoomID = #{record.examroomid,jdbcType=INTEGER},
      batch = #{record.batch,jdbcType=INTEGER},
      week = #{record.week,jdbcType=INTEGER},
      periodID = #{record.periodid,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.cqupt.onlinebooking.po.Proctor" >
    update proctor
    <set >
      <if test="teacherid != null" >
        teacherID = #{teacherid,jdbcType=INTEGER},
      </if>
      <if test="examroomid != null" >
        examRoomID = #{examroomid,jdbcType=INTEGER},
      </if>
      <if test="batch != null" >
        batch = #{batch,jdbcType=INTEGER},
      </if>
      <if test="week != null" >
        week = #{week,jdbcType=INTEGER},
      </if>
      <if test="periodid != null" >
        periodID = #{periodid,jdbcType=INTEGER},
      </if>
    </set>
    where examID = #{examid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.cqupt.onlinebooking.po.Proctor" >
    update proctor
    set teacherID = #{teacherid,jdbcType=INTEGER},
      examRoomID = #{examroomid,jdbcType=INTEGER},
      batch = #{batch,jdbcType=INTEGER},
      week = #{week,jdbcType=INTEGER},
      periodID = #{periodid,jdbcType=INTEGER}
    where examID = #{examid,jdbcType=INTEGER}
  </update>
</mapper>